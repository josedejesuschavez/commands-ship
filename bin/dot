#!/bin/bash

function total_is() {
  total_expected="${1}"
  arguments="${@:2}"

  total_arguments=0
  for argument in ${arguments[*]}; do
    total_arguments=$((total_arguments + 1))
  done

  [[ $total_arguments -eq $total_expected ]]
}

function fzf_prompt() {
  #echo "$($1 | cut -d" " -f 2)"
  local -r paths="$1"

  script="$(
      echo "$paths" |
      xargs -I _ sh -c 'echo "_"' |
      fzf \
        --height 100% \
        --layout=reverse \
        --preview 'cat $DOTFILES_PATH/commands/$(echo {} | cut -d" " -f 1)/$(echo {} | cut -d" " -f 2)/doc' \
        --preview-window right:80
  )"

  printf "%s " "$(echo ${script} | cut -d" " -f 2)"
  
  read -r args
  
  "${DOTFILES_PATH}/commands/$(echo ${script} | cut -d" " -f 1)/$(echo ${script} | cut -d" " -f 2)/script" $args
}

list_scripts_path() {
  dotfiles_contexts=$(find "$DOTFILES_PATH/commands" -maxdepth 2 -mindepth 2 -type d | awk -F '/' '{print $6" "$7}')

  printf "%s\n" "$dotfiles_contexts" | sort -u
}

if total_is 0 "$@"; then
    fzf_prompt "$(list_scripts_path)"
elif total_is 1 "$@"; then
    echo "${1}"
    fzf_prompt "$(list_scripts_path | grep "$1")"
else
    context="$1"
    script="$2"
    
    shift 2
    
    "${DOTFILES_PATH}/scripts/${context}/${script}" "$@"
fi
